generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employer {
  id          String      @id @unique @default(uuid())
  directionId String
  userId      String      @unique
  direction   Direction   @relation(fields: [directionId], references: [id])
  user        Utilisateur @relation(fields: [userId], references: [id])
}

model Visite {
  id                     String        @id @unique @default(uuid())
  visiteurId             String
  heureEntrer            DateTime
  heureEntrerDestination DateTime
  heureSortirDestination DateTime
  heureSortir            DateTime
  utilisateurId          String
  receptionisteId        String        @unique
  directionId            String
  direction              Direction     @relation(fields: [directionId], references: [id])
  utilisateur            Utilisateur   @relation(fields: [utilisateurId], references: [id])
  receptioniste          Recepcioniste @relation(fields: [receptionisteId], references: [id])
  visiteur               Visiteur      @relation(fields: [visiteurId], references: [id])
}

model Directeur_branche {
  id       String      @id @unique @default(uuid())
  userId   String      @unique
  bracheId String      @unique
  branche  Branche     @relation(fields: [bracheId], references: [id])
  user     Utilisateur @relation(fields: [userId], references: [id])
}

model Direction {
  id         String      @id @unique @default(uuid())
  nom        String
  brancheId  String
  branche    Branche     @relation(fields: [brancheId], references: [id])
  Directeur  Directeur?
  Employers  Employer[]
  visites    Visite[]
  Secretaire Secretaire?

  @@index([brancheId, nom])
}

model Secretaire {
  id          String      @id @unique @default(uuid())
  userId      String      @unique
  directionId String      @unique
  direction   Direction   @relation(fields: [directionId], references: [id])
  user        Utilisateur @relation(fields: [userId], references: [id])
}

model Utilisateur {
  id                String             @id @unique @default(uuid())
  firstName         String
  lastName          String
  email             String             @unique
  password          String
  directeur         Directeur?
  Directeur_branche Directeur_branche?
  employer          Employer?
  recepcioniste     Recepcioniste?
  secretaire        Secretaire?
  visites           Visite[]

  @@index([firstName, lastName])
}

model Branche {
  id               String             @id @unique @default(uuid())
  nom              String
  adresse          String
  wilaya           String
  direction        Direction[]
  recepcioniste    Recepcioniste[]
  directeurBranche Directeur_branche?
}

model Visiteur {
  id         String   @id @unique @default(uuid())
  firstName  String
  lastName   String
  adresse    String
  typePiece  String
  idPiece    String   @unique
  entreprise String?
  visites    Visite[]

  @@index([firstName, lastName])
}

model Recepcioniste {
  id        String      @id @unique @default(uuid())
  userId    String      @unique
  brancheId String
  branche   Branche     @relation(fields: [brancheId], references: [id])
  user      Utilisateur @relation(fields: [userId], references: [id])
  visites   Visite[]
}

model Directeur {
  id          String      @id @unique @default(uuid())
  userId      String      @unique
  directionId String      @unique
  direction   Direction   @relation(fields: [directionId], references: [id])
  user        Utilisateur @relation(fields: [userId], references: [id])
}
